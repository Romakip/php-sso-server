version: "3.8"

services:
  sso-server:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: sso-server
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./:/app
    environment:
      - DB_HOST=${DB_HOST}
      - REDIS_HOST=${REDIS_HOST}
    depends_on:
      - sso-db
      - sso-redis
      - sso-nats
    networks:
      - app-network

  sso-nginx:
    image: nginx:latest
    container_name: sso-nginx
    ports:
      - "80:80"
    volumes:
      - ./:/app
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - sso-server
    networks:
      - app-network

  sso-db:
    image: mysql:8.0
    container_name: sso-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - mysqldata:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - app-network

  sso-redis:
    image: redis:7
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    networks:
      - app-network

  sso-nats:
    image: nats:2
    container_name: sso-nats
    command: ["-js", "-sd", "/data"]
    ports:
      - "4222:4222"
      - "8222:8222"
    volumes:
      - natsdata:/data
    networks:
      - app-network

volumes:
  mysqldata:
  natsdata:

networks:
  app-network:
    driver: bridge
